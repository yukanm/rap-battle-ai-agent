# Cloud Build configuration for AI Rap Battle application
steps:
  # Build backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/rap-battle-backend:latest'
      - '-f'
      - 'backend/Dockerfile'
      - 'backend'
    
  # Build frontend Docker image with build args
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/rap-battle-frontend:latest'
      - '-f'
      - 'frontend/Dockerfile'
      - 'frontend'

  # Push backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/rap-battle-backend'
    waitFor: ['build-backend']

  # Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/rap-battle-frontend'
    waitFor: ['build-frontend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'rap-battle-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/rap-battle-backend:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8456'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '100'
      - '--concurrency'
      - '1000'
      - '--timeout'
      - '3600'
      - '--session-affinity'
      - '--no-cpu-throttling'
      - '--service-account'
      - 'rap-battle-sa@boxwood-scope-463317-b6.iam.gserviceaccount.com'
      - '--set-env-vars'
      - |
        NODE_ENV=production,
        GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID,
        VERTEX_AI_LOCATION=us-central1,
        GEMINI_FLASH_MODEL=gemini-1.5-flash,
        GEMINI_PRO_MODEL=gemini-1.5-pro,
        TTS_LANGUAGE_CODE=ja-JP,
        TTS_VOICE_NAME=ja-JP-Wavenet-A,
        TTS_SPEAKING_RATE=1.2,
        TTS_PITCH=0.0,
        TTS_VOLUME_GAIN_DB=0.0,
        COMPLIANCE_THRESHOLD=0.8,
        ENABLE_VOTING=true,
        ENABLE_ANALYTICS=true,
        ENABLE_COMPLIANCE_CHECK=false,
        ENABLE_RATE_LIMITING=true,
        RATE_LIMIT_REQUESTS_PER_MINUTE=60,
        RATE_LIMIT_WEBSOCKET_MESSAGES_PER_SECOND=10,
        LYRIC_GENERATION_TIMEOUT_MS=5000,
        COMPLIANCE_CHECK_TIMEOUT_MS=1000,
        TTS_GENERATION_TIMEOUT_MS=2000,
        WEBSOCKET_PING_INTERVAL_MS=30000,
        ALLOWED_ORIGINS=https://rap-battle-frontend-bslarjwwyq-uc.a.run.app
      - '--update-secrets'
      - 'JWT_SECRET=jwt-secret:1,SESSION_SECRET=session-secret:1,GEMINI_API_KEY=gemini-api-key:1'
    waitFor: ['push-backend']

  # Get backend URL for frontend
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-backend-url'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$(gcloud run services describe rap-battle-backend --region=us-central1 --format='value(status.url)')
        echo "Backend URL: $$BACKEND_URL"
        echo $$BACKEND_URL > /workspace/backend-url.txt
    waitFor: ['deploy-backend']

  # Deploy frontend to Cloud Run with backend URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BACKEND_URL=$(cat /workspace/backend-url.txt)
        gcloud run deploy rap-battle-frontend \
          --image gcr.io/$PROJECT_ID/rap-battle-frontend:latest \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --port 3456 \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 1 \
          --max-instances 50 \
          --concurrency 1000 \
          --service-account rap-battle-sa@boxwood-scope-463317-b6.iam.gserviceaccount.com \
          --set-env-vars "NODE_ENV=production,NEXT_PUBLIC_API_URL=$$BACKEND_URL,NEXT_PUBLIC_WEBSOCKET_URL=$$BACKEND_URL"
    waitFor: ['push-frontend', 'get-backend-url']

options:
  machineType: 'N1_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY
  substitutionOption: 'ALLOW_LOOSE'

timeout: '1800s'